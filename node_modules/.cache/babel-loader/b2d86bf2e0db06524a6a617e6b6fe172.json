{"ast":null,"code":"import _slicedToArray from \"/Users/max.prikhodko/Desktop/cinema/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/max.prikhodko/Desktop/cinema/src/components/MovieList/index.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport Movie from '../Movie';\nimport Header from '../Header';\nimport './movie-list.css';\n\nfunction MoviesList() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        movies = _useState2[0],\n        setMovies = _useState2[1];\n\n  useEffect(() => {\n    axios.get('https://cinema-api-test.herokuapp.com/movies').then(({\n      data\n    }) => data).then(setMovies).catch(console.log);\n  }, []);\n\n  const onSearchChanged = term => {\n    const searchUrl = term ? \"https://cinema-api-test.herokuapp.com/movies/find?name=\".concat(term) : 'https://cinema-api-test.herokuapp.com/movies';\n    axios.get(searchUrl).then(({\n      data\n    }) => data).then(setMovies).catch(console.log);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Header, {\n    onChange: onSearchChanged,\n    hideInput: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, movies.map(movie => {\n    const id = movie._id,\n          pictureLink = movie.pictureLink,\n          name = movie.name,\n          dateOfRelease = movie.dateOfRelease;\n    return React.createElement(Movie, {\n      key: id,\n      id: id,\n      name: name,\n      pictureLink: pictureLink,\n      dateOfRelease: moment(dateOfRelease).format('DD/MM/YYYY'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    });\n  })));\n}\n\nexport default MoviesList;","map":{"version":3,"sources":["/Users/max.prikhodko/Desktop/cinema/src/components/MovieList/index.js"],"names":["React","useEffect","useState","axios","moment","Movie","Header","MoviesList","movies","setMovies","get","then","data","catch","console","log","onSearchChanged","term","searchUrl","map","movie","id","_id","pictureLink","name","dateOfRelease","format"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,OAAO,kBAAP;;AAEA,SAASC,UAAT,GAAsB;AAAA,oBACUL,QAAQ,CAAC,EAAD,CADlB;AAAA;AAAA,QACXM,MADW;AAAA,QACHC,SADG;;AAElBR,EAAAA,SAAS,CACL,MAAM;AACFE,IAAAA,KAAK,CAACO,GAAN,CAAU,8CAAV,EACKC,IADL,CACU,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAcA,IADxB,EAEKD,IAFL,CAEUF,SAFV,EAGKI,KAHL,CAGWC,OAAO,CAACC,GAHnB;AAIH,GANI,EAMF,EANE,CAAT;;AASA,QAAMC,eAAe,GAAIC,IAAD,IAAU;AAC9B,UAAMC,SAAS,GACXD,IAAI,oEAC4DA,IAD5D,IAEC,8CAHT;AAMAd,IAAAA,KAAK,CAACO,GAAN,CAAUQ,SAAV,EACKP,IADL,CACU,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAcA,IADxB,EAEKD,IAFL,CAEUF,SAFV,EAGKI,KAHL,CAGWC,OAAO,CAACC,GAHnB;AAIH,GAXD;;AAaA,SACI,0CACI,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAEC,eAAlB;AAAmC,IAAA,SAAS,EAAE,IAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQR,MAAM,CAACW,GAAP,CAAWC,KAAK,IAAI;AAAA,UACHC,EADG,GACsCD,KADtC,CACRE,GADQ;AAAA,UACCC,WADD,GACsCH,KADtC,CACCG,WADD;AAAA,UACcC,IADd,GACsCJ,KADtC,CACcI,IADd;AAAA,UACoBC,aADpB,GACsCL,KADtC,CACoBK,aADpB;AAEZ,WACI,oBAAC,KAAD;AACI,MAAA,GAAG,EAAEJ,EADT;AAEI,MAAA,EAAE,EAAEA,EAFR;AAGI,MAAA,IAAI,EAAEG,IAHV;AAII,MAAA,WAAW,EAAED,WAJjB;AAKI,MAAA,aAAa,EAAEnB,MAAM,CAACqB,aAAD,CAAN,CAAsBC,MAAtB,CAA6B,YAA7B,CALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AASH,GAXL,CAFR,CAFJ,CADJ;AAsBH;;AAED,eAAenB,UAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport moment from 'moment'\n\nimport Movie from '../Movie';\nimport Header from '../Header';\n\nimport './movie-list.css';\n\nfunction MoviesList() {\n    const [movies, setMovies] = useState([]);\n    useEffect(\n        () => {\n            axios.get('https://cinema-api-test.herokuapp.com/movies')\n                .then(({ data }) => data)\n                .then(setMovies)\n                .catch(console.log);\n        }, []\n    );\n\n    const onSearchChanged = (term) => {\n        const searchUrl = (\n            term\n                ? `https://cinema-api-test.herokuapp.com/movies/find?name=${term}`\n                :'https://cinema-api-test.herokuapp.com/movies'\n        );\n\n        axios.get(searchUrl)\n            .then(({ data }) => data)\n            .then(setMovies)\n            .catch(console.log);\n    };\n\n    return (\n        <>\n            <Header onChange={onSearchChanged} hideInput={true} />\n            <div className='wrapper'>\n                {\n                    movies.map(movie => {\n                        const { _id: id, pictureLink, name, dateOfRelease } = movie;\n                            return (\n                                <Movie\n                                    key={id}\n                                    id={id}\n                                    name={name}\n                                    pictureLink={pictureLink}\n                                    dateOfRelease={moment(dateOfRelease).format('DD/MM/YYYY')}\n                                />\n                            )\n                        }\n                    )\n                }\n            </div>\n        </>\n    )\n}\n\nexport default MoviesList;\n"]},"metadata":{},"sourceType":"module"}