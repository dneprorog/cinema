{"ast":null,"code":"import _slicedToArray from \"/Users/max.prikhodko/Desktop/cinema/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/max.prikhodko/Desktop/cinema/src/components/Session/index.js\";\nimport React, { useEffect, useState, memo } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport Seats from '../Seats';\nimport './seat-selection.css';\n\nconst Session = ({\n  movieId\n}) => {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        session = _useState2[0],\n        setSession = _useState2[1];\n\n  useEffect(() => {\n    axios.get(\"https://cinema-api-test.herokuapp.com/movieShows?movie_id=\".concat(movieId)).then(({\n      data\n    }) => data).then(setSession).catch(console.log);\n  }, [movieId]);\n\n  const onSeatClicked = (rowId, position, isFree) => {\n    console.log(rowId, position, isFree);\n    axios.post('https://cinema-api-test.herokuapp.com/bookingPlace', {\n      movieShow_id: movieId,\n      row_id: rowId,\n      place_position: position,\n      isFree\n    }).then(({\n      data\n    }) => data).then(msg => alert(\"\".concat(msg, \" - \\u044D\\u0442\\u043E \\u043E\\u0442\\u0432\\u0435\\u0442 \\u043E\\u0442 \\u0441\\u0435\\u0440\\u0432\\u0435\\u0440\\u0430, \\u044F \\u043D\\u0435 \\u0448\\u0443\\u0447\\u0443!\"))).catch(console.log);\n  };\n\n  return React.createElement(React.Fragment, null, session._id && React.createElement(React.Fragment, null, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Session start: \", moment(session.startTime).format('DD/MM/YYYY HH:mm')), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Price: \", session.ticketPrice), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"NAME\"), React.createElement(Seats, {\n    seats: session.places,\n    onClick: onSeatClicked,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })));\n};\n\nexport default memo(Session);","map":{"version":3,"sources":["/Users/max.prikhodko/Desktop/cinema/src/components/Session/index.js"],"names":["React","useEffect","useState","memo","axios","moment","Seats","Session","movieId","session","setSession","get","then","data","catch","console","log","onSeatClicked","rowId","position","isFree","post","movieShow_id","row_id","place_position","msg","alert","_id","startTime","format","ticketPrice","places"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,IAArC,QAAiD,OAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,OAAO,sBAAP;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA,oBACCN,QAAQ,CAAC,EAAD,CADT;AAAA;AAAA,QACtBO,OADsB;AAAA,QACbC,UADa;;AAE7BT,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,KAAK,CAACO,GAAN,qEAAuEH,OAAvE,GACKI,IADL,CACU,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAcA,IADxB,EAEKD,IAFL,CAEUF,UAFV,EAGKI,KAHL,CAGWC,OAAO,CAACC,GAHnB;AAIH,GALQ,EAKN,CAACR,OAAD,CALM,CAAT;;AAOA,QAAMS,aAAa,GAAG,CAACC,KAAD,EAAQC,QAAR,EAAkBC,MAAlB,KAA6B;AAC/CL,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ,EAAmBC,QAAnB,EAA6BC,MAA7B;AACAhB,IAAAA,KAAK,CAACiB,IAAN,CAAW,oDAAX,EAAiE;AAC7DC,MAAAA,YAAY,EAAEd,OAD+C;AAE7De,MAAAA,MAAM,EAAEL,KAFqD;AAG7DM,MAAAA,cAAc,EAAEL,QAH6C;AAI7DC,MAAAA;AAJ6D,KAAjE,EAKGR,IALH,CAKQ,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAcA,IALtB,EAMCD,IAND,CAMMa,GAAG,IAAIC,KAAK,WAAID,GAAJ,iKANlB,EAOCX,KAPD,CAOOC,OAAO,CAACC,GAPf;AAQH,GAVD;;AAYA,SACI,0CAEQP,OAAO,CAACkB,GAAR,IAEQ,0CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAoBtB,MAAM,CAACI,OAAO,CAACmB,SAAT,CAAN,CAA0BC,MAA1B,CAAiC,kBAAjC,CAApB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAYpB,OAAO,CAACqB,WAApB,CAFJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,EAKI,oBAAC,KAAD;AACI,IAAA,KAAK,EAAErB,OAAO,CAACsB,MADnB;AAEI,IAAA,OAAO,EAAEd,aAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CAJhB,CADJ;AAoBH,CAzCD;;AA2CA,eAAed,IAAI,CAACI,OAAD,CAAnB","sourcesContent":["import React, { useEffect, useState, memo } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\n\nimport Seats from '../Seats';\n\nimport './seat-selection.css';\n\nconst Session = ({ movieId }) => {\n    const [session, setSession] = useState({});\n    useEffect(() => {\n        axios.get(`https://cinema-api-test.herokuapp.com/movieShows?movie_id=${movieId}`)\n            .then(({ data }) => data)\n            .then(setSession)\n            .catch(console.log)\n    }, [movieId]);\n\n    const onSeatClicked = (rowId, position, isFree) => {\n        console.log(rowId, position, isFree);\n        axios.post('https://cinema-api-test.herokuapp.com/bookingPlace', {\n            movieShow_id: movieId,\n            row_id: rowId,\n            place_position: position,\n            isFree\n        }).then(({ data }) => data)\n        .then(msg => alert(`${msg} - это ответ от сервера, я не шучу!`))\n        .catch(console.log)\n    }\n\n    return (\n        <>\n            {\n                session._id &&\n                    (\n                        <>\n                            <p>Session start: { moment(session.startTime).format('DD/MM/YYYY HH:mm') }</p>\n                            <p>Price: { session.ticketPrice }</p>\n\n                            <p>NAME</p>\n                            <Seats\n                                seats={session.places}\n                                onClick={onSeatClicked}\n                            />\n                        </>\n                    )\n            }\n\n        </>\n    );\n};\n\nexport default memo(Session);\n"]},"metadata":{},"sourceType":"module"}